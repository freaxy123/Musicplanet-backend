plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "jacoco"
    id "org.sonarqube" version "2.7.1"
    id 'com.palantir.docker' version '0.22.1'
}

group = 'com.musicplanet'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

docker {
    name "musicplanet"
    dockerfile file('Dockerfile')
    copySpec.from(jar).rename(".*","app.jar")
    buildArgs(['JAR_FILE': "app.jar"])
}

jacocoTestReport{
    dependsOn test
    reports{
        xml.enabled true
        csv.enabled false
        html.enabled false
        html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.security:spring-security-test'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.2'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.4.30.Final'
    implementation group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.4.30.Final'
    implementation("org.springframework.boot:spring-boot-starter-mail")
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    // https://mvnrepository.com/artifact/org.springframework/spring-test
    testImplementation group: 'org.springframework', name: 'spring-test', version: '5.3.7'

    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation 'junit:junit:4.13'

// https://mvnrepository.com/artifact/com.h2database/h2
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.197'

// https://mvnrepository.com/artifact/org.junit.vintage/junit-vintage-engine
    testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.7.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation"org.assertj:assertj-core:3.11.1"



}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

sonarqube {
    properties{
        property "sonar.java.source", "1.8"
        property "sonar.java.coveragePlugin", "jacoco"
        /* property "sonar.jacoco.reportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.projectKey", "Musicplanet_Backend"
        property "sonar.host.url", "http://127.0.0.1:9000"
        property "sonar.login", "7aca10aaf16c2a63b3ce7dd54a2675614674b57b" */
    }
}

tasks["sonarqube"].dependsOn("jacocoTestReport")



